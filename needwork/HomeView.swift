//
//  HomeView.swift
//  needwork
//
//  Created by Baris Tikir on 29.07.20.
//  Copyright Â© 2020 Baris Tikir. All rights reserved.
//

import SwiftUI


// COLORS
let backgroundColor = Color(#colorLiteral(red: 0.9478042722, green: 0.9413100481, blue: 0.937730968, alpha: 1))
let textColor = Color(#colorLiteral(red: 0.2569463253, green: 0.2420758605, blue: 0.2151646316, alpha: 1))
let secondaryColor = Color(#colorLiteral(red: 0.5676505566, green: 0.5602197647, blue: 0.5466300845, alpha: 1))
let accentTextColor = Color(#colorLiteral(red: 0.6852199435, green: 0.6780956984, blue: 0.6678422093, alpha: 1))
let firstCardColor = Color(#colorLiteral(red: 0.6142973304, green: 0.6206635833, blue: 0.583666563, alpha: 1))
let secondaryAccentTextColor = Color(#colorLiteral(red: 0.7871719599, green: 0.7800607085, blue: 0.7697893977, alpha: 1))
let secondCardColor = Color(#colorLiteral(red: 0.5775497556, green: 0.5494823456, blue: 0.4757016897, alpha: 1))
let thirdCardColor = Color(#colorLiteral(red: 0.4129932523, green: 0.3736724257, blue: 0.3598947823, alpha: 1))
let fourthCardColor = Color(#colorLiteral(red: 0.2431854308, green: 0.2543239295, blue: 0.3014985323, alpha: 1))
let dividerColor = Color(#colorLiteral(red: 0.2628910542, green: 0.2736267447, blue: 0.3174280226, alpha: 1))
let opaqueColor = Color(#colorLiteral(red: 0.3335806727, green: 0.343891114, blue: 0.3843034506, alpha: 1))
let cardBadgetFrameColor = Color(#colorLiteral(red: 0.4392156863, green: 0.4392156863, blue: 0.4392156863, alpha: 1))


struct Item: Identifiable{
    var id = UUID()
    var name: String
    var type: String
    var description: String
    var subtitle: String
    var image: String
    var ratings: String
    var features: [BadgetItem]
}

struct HomeView: View {
    
    @State var expandedItem = Item(name:"Oberholz",type: "Coworking Cafe", description: "Cafe", subtitle: "", image: "", ratings: "4.9", features: [BadgetItem(icon: Image("Icon-Wifi"), title: "Free Wifi"),BadgetItem(icon: Image("Icon-Wifi"), title: "Quite")])
    @State var expandedScreen_startPoint = CGRect(x: 0, y: 0, width: 100, height: 100)
    @State var expandedScreen_returnPoint = CGRect(x: 0, y: 0, width: 100, height: 100)
    @State var expandedScreen_shown = false
    @State var expandedScreen_willHide = false
    @State private var isAdShowing = true
    @State var show = false
    
    @EnvironmentObject var manager: HttpAuth
    
    //--- Constants --- //
    let itemHeight: CGFloat = 300
    let itemWidth: CGFloat = 400
    let SVWidth = UIScreen.main.bounds.width - 80
    
    var body: some View {
        ZStack{
            //Coloring
            Color.white.edgesIgnoringSafeArea(.all)
            
            //For wrapping up horizontal ScrollView in vertical ScrollView
            GeometryReader{ g in
                
                //Vertical ScrollView for whole View
                ScrollView{
                    
                    //-------- Heading Section         //
                    HStack{
                        
                        //Vertical Stack for Heading Text Section
                        VStack(alignment: .leading){
                            
                            // TODO: Autogenerated via time management
                            Text("Guten Tag")
                                .font(.system(size: 18, weight: .bold, design: .default))
                                .foregroundColor(.gray)
                            
                            //TODO: User's personal name from database
                            //Font color is white because of the overall foregroundcolor of white
                            Text("Baris")
                                .font(.system(size: 40, weight: .bold, design: .default))
                                .foregroundColor(.black)
                        }
                        
                        Spacer()
                        
                        Image(systemName: "person")
                            .resizable()
                            .frame(width: 30, height: 30)
                        
                        //Layout Sizing
                    }.padding(.leading).padding(.top).padding(.trailing)
                    //          Heading Section --------- //
                    
                    
                    //--------- Categories Section ---------//
                    horizontalScroll()
                    Divider()
                    //--------- Categories Section ---------//

                    
                    //--------- Pro Membership Advertisement Section ---------//

                    if self.isAdShowing{
                        ProMemberBannerView(isAdShowing: self.$isAdShowing)
                        
                    } else {
                        EmptyView()
                    }
                    //--------- Pro Membership Advertisement Section ---------//

                    
                    //--------- Cards Section ---------//
                    HomeCardHeaderTextView()
                    HomeCardView(show: self.$show, selected: self.$expandedItem)
                    //--------- Cards Section --------- //
                }
                
            }
            
            if self.show{
               Detail(selected: self.$expandedItem, show: self.$show)
            }
        }
        
        //Expanded View
        //            GeometryReader{geoReader -> AnyView in
        //                let thisItem = self.expandedItem
        //
        //                return AnyView(
        //
        //                    ZStack{
        //                        ScrollView{
        //                            VStack(spacing: 0){
        //                                //For Recreating the old unexpanded Card and View
        //                                ZStack{
        //
        //                                    Image(thisItem.image)
        //                                        .resizable()
        //                                        .scaledToFit()
        //                                        .offset(y: self.expandedScreen_shown ? 0:0)
        //                                        .frame(width: self.expandedScreen_shown ? UIScreen.main.bounds.width : self.SVWidth,
        //                                               height: self.itemHeight)
        //                                        .clipped()
        //                                        .background(Color.white)
        //                                        .edgesIgnoringSafeArea(.top)
        //
        //                                    VStack{
        //                                        HStack{
        //                                                    VStack(alignment: .leading){
        //                                                        Text("\(thisItem.subtitle)")
        //                                                            .font(.system(size: 18, weight: .bold, design: .default))
        //                                                            .foregroundColor(.init(red: 0.8, green: 0.8, blue: 0.8))
        //                                                            .opacity(1.0)
        //
        //                                                        Text("\(thisItem.name)")
        //                                                            .font(.system(size: 36, weight: .bold, design: .default))
        //                                                            .foregroundColor(.white)
        //                                                    }.padding()
        //                                                    Spacer()
        //                                                }.offset(y: self.expandedScreen_shown ? 44 : 0)
        //                                                Spacer()
        //                                                HStack{
        //                                                    VStack(alignment: .leading){
        //                                                        Text("\(thisItem.description)")
        //                                                            .lineLimit(2)
        //                                                            .font(.system(size: 18, weight: .bold, design: .default))
        //                                                            .foregroundColor(.init(red: 0.9, green: 0.9, blue: 0.9))
        //                                                            .opacity(0.8)
        //                                                    }.padding()
        //                                                    Spacer()
        //                                                }
        //                                            }.frame(width: self.expandedScreen_startPoint.width)
        //                                        }.frame(height: self.itemHeight).zIndex(1)
        //                                Text("\(thisItem.description)").padding().background(Color.white).frame(
        //                                maxHeight: self.expandedScreen_shown ? .infinity : 0)
        //                                }
        //                            }.frame(width: self.expandedScreen_startPoint.width, height: self.expandedScreen_startPoint.height)
        //                            .background(Color.clear)
        //                            .cornerRadius(self.expandedScreen_shown ? 0 : 15 )
        //                            .animation(.easeInOut(duration: 0.3))
        //                            .offset(x: self.expandedScreen_startPoint.minX, y: self.expandedScreen_startPoint.minY)
        //
        //                                    Button(action: {
        //                                        self.expandedScreen_willHide = true
        //                                        self.expandedScreen_startPoint = self.expandedScreen_returnPoint
        //
        //                                        self.expandedScreen_shown = false
        //                                        Timer.scheduledTimer(withTimeInterval: 0.6, repeats: false){
        //                                            (timer) in
        //                                            self.expandedScreen_willHide = false
        //                                        }
        //                                    }){
        //                                        Image(systemName: "xmark.circle.fill")
        //                                            .foregroundColor(.init(white: 0.9))
        //                                            .font(.system(size:25)).padding()
        //                                            .opacity(self.expandedScreen_shown ? 1 : 0.0)
        //                                            .animation(Animation.easeInOut(duration: 0.3))
        //                                    }.offset(x: (UIScreen.main.bounds.width/2) - 30 , y: (-1 * UIScreen.main.bounds.height/2) + 60)
        //                    }
        //                )
        //            }.edgesIgnoringSafeArea(.top)
        //                .opacity(self.expandedScreen_shown ? 1 : 0.0)
        //                .animation(Animation.easeInOut(duration: 0.05)
        //                    .delay(self.expandedScreen_willHide ? 0.5 : 0))
    }
}

// --- 3D Touch Feature --- //
func addToFavorites(place: Item) {
    let currentPlace = place
}

// -- Horizontal Scroll of Categorys -- //
fileprivate func horizontalScroll() -> some View{
    
    var selected = true
    
    return // top horizontal scroll
        ScrollView(.horizontal, showsIndicators: false){
            HStack{
                Color.clear.frame(width:13)
                
                //
                VStack{
                    //First Item of Categories
                    Text("Co-Working")
                        .kerning(-0.5)
                        .foregroundColor(Color.white)
                        .font(.custom("HelveticaNeue-Medium", size: 18))
                        .padding([.vertical], 5)
                        .padding([.horizontal], 10)
                        .background(selected ? secondaryAccentTextColor : Color.clear)
                        .cornerRadius(15)
                }.onTapGesture {
                    print("tapped")
                    selected.toggle()
                }
                
                //Distance as background color to next category item
                Color.clear.frame(width: 90)
                
                //Second Item of Categories
                Text("Working")
                    .kerning(-0.5)
                    .foregroundColor(secondaryAccentTextColor)
                    .font(.custom("HelveticaNeue-Medium",
                                  size: 18))
                
                //Distance as background color to next category item
                Color.clear.frame(width: 16)
                
                //Second Item of Categories
                Text("Learning")
                    .kerning(-0.5)
                    .foregroundColor(secondaryAccentTextColor)
                    .font(.custom("HelveticaNeue-Medium",
                                  size: 18))
                
                Color.clear.frame(width: 16)

                //Second Item of Categories
                Text("Learning")
                    .kerning(-0.5)
                    .foregroundColor(secondaryAccentTextColor)
                    .font(.custom("HelveticaNeue-Medium",
                                  size: 18))
                
                Color.clear.frame(width: 16)

            }
        }.padding([.bottom], 20).padding([.top],15)
}


// --- Pro Membership Banner View --- //
struct ProMemberBannerView: View{
    @Binding var isAdShowing: Bool
    
    var body: some View{
        HStack{
            ZStack(alignment: .leading){
                VStack(alignment: .leading){
                    ProCardHeaderLabelView(label: "Upgrade Now")
                    ProCardHeaderLabelView(label: "Your Profile")
                    
                    ProCardBodyLabelView(label: "The best workplace is the key of ..")
                    ProCardBodyLabelView(label: "future, so leran more here")
                    
                    Spacer()
                    
                    ProCardButonView()
                }
            }
            
            Spacer()
            CloseButtonView(isAdShowing: $isAdShowing)
        }
        .padding()
        .frame(width: UIScreen.main.bounds.width - 32, height: 220, alignment: .center)
        .background(LinearGradient(gradient: Gradient(colors: [Color(.systemIndigo), Color.purple]), startPoint: .topLeading, endPoint: .bottomTrailing))
        .cornerRadius(18)
        .padding(.vertical)
    }
}

// --- Pro Membership Banner Header Labeling --- //
struct ProCardHeaderLabelView: View {
    let label: String
    
    var body: some View{
        Text(label)
            .font(.title)
            .fontWeight(.heavy)
            .foregroundColor(Color.white)
    }
}

// --- Pro Membership Banner Body Labeling --- //
struct ProCardBodyLabelView: View {
    let label: String
    
    var body: some View{
        Text(label)
            .foregroundColor(Color.white)
    }
}

// --- Pro Membership Close Button --- //
struct CloseButtonView: View{
    @Binding var isAdShowing: Bool
    
    var body: some View{
        VStack {
            Button(action: closeButtonAction){
                Image(systemName: "xmark")
                    .font(Font.body.weight(.medium))
                    .foregroundColor(.white)
                    .padding(8)
                    .background(Color.white.opacity(0.4))
                .clipShape(Circle())
            }
            
            Spacer()
        }
    }
    
    func closeButtonAction() {
        isAdShowing.toggle()
    }
}

// --- Pro Membership Get Pro Button --- //
struct ProCardButonView: View {
    var body: some View {
        Button(action: {
            print("Tapped.")
        }){
            Text("Get Pro")
                .accentColor(.white)
                .frame(width: 100, height: 40)
                .background(Color.orange)
                .clipShape(Capsule())
                .padding(.vertical)
        }
    }
}


// --- Card View Header for Workplaces --- //
struct HomeCardHeaderTextView: View {
    var body: some View {
        HStack {
            Text("Featured Workplaces")
                .font(.title)
                .fontWeight(.heavy)
            
            Spacer()
        }.padding(.leading)
    }
}

// --- Card View for all Workplaces inside Home --- //
struct HomeCardView: View{
    //Variables
    var places:[Item] = [
        Item(name: "St Oberholz", type: "Coworking Cafe", description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Etiam tempor orci eu lobortis elementum nibh. Cras sed felis eget velit aliquet sagittis. Nibh sit amet commodo nulla facilisi nullam vehicula ipsum. Pretium fusce id velit ut tortor pretium viverra suspendisse potenti. Mi quis hendrerit dolor magna eget est lorem. Gravida dictum fusce ut placerat orci nulla pellentesque. Mauris sit amet massa vitae tortor condimentum lacinia quis vel. Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque. Eget dolor morbi non arcu risus. Placerat duis ultricies lacus sed turpis tincidunt. Aliquet sagittis id consectetur purus. Orci phasellus egestas tellus rutrum tellus pellentesque eu. Morbi tristique senectus et netus. Elementum facilisis leo vel fringilla est ullamcorper eget. Pellentesque elit eget gravida cum sociis. Ultricies tristique nulla aliquet enim tortor at. Risus viverra adipiscing at in. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Etiam tempor orci eu lobortis elementum nibh. Cras sed felis eget velit aliquet sagittis. Nibh sit amet commodo nulla facilisi nullam vehicula ipsum. Pretium fusce id velit ut tortor pretium viverra suspendisse potenti. Mi quis hendrerit dolor magna eget est lorem. Gravida dictum fusce ut placerat orci nulla pellentesque. Mauris sit amet massa vitae tortor condimentum lacinia quis vel. Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque. Eget dolor morbi non arcu risus. Placerat duis ultricies lacus sed turpis tincidunt. Aliquet sagittis id consectetur purus. Orci phasellus egestas tellus rutrum tellus pellentesque eu. Morbi tristique senectus et netus. Elementum facilisis leo vel fringilla est ullamcorper eget. Pellentesque elit eget gravida cum sociis. Ultricies tristique nulla aliquet enim tortor at. Risus viverra adipiscing at in.", subtitle: "Cafe", image: "CafeOberholz", ratings: "5", features: [BadgetItem(icon: Image("Icon-Wifi"), title: "Free Wifi")]),
        Item(name: "St Oberholz 2", type: "Coworking Cafe", description: "Workplace for freelancers / students and more", subtitle: "Cafe", image: "Cafe2-1", ratings: "3.8", features: [BadgetItem(icon: Image("Icon-Wifi"), title: "Free Wifi")]),
        Item(name: "Freelance Working Station", type: "Freelance Workplace", description: "Workplace for freelancers / students and more", subtitle: "Workplace", image: "Cafe3-1",ratings: "4.8", features: [BadgetItem(icon: Image("Icon-Wifi"), title: "Free Wifi")]),
        Item(name: "Microsoft Cafe", type: "Coworking Cafe", description: "Workplace for freelancers / students and more", subtitle: "Cafe", image: "Cafe5",ratings: "4.3", features: [BadgetItem(icon: Image("Icon-Wifi"), title: "Free Wifi")]),
    ]
    
    @Binding var show: Bool
    @Binding var selected: Item
    @State private var selectedIndex: Int = 0
    
    let itemHeight: CGFloat = 300
    let itemWidth: CGFloat = 400
    let SVWidth = UIScreen.main.bounds.width - 40
    
    
//    func badgetTitles(place: Item) -> [Image] {
//        let titles = place.features
//        switch titles {
//        case <#pattern#>:
//            <#code#>
//        default:
//            <#code#>
//        }
//    }
//    func BadgetView(place: Item) -> some View{
//        var item = place.features
//
//        return (
//            HStack{
//                ForEach(item,id: \.self) { i in
//                    HStack{
//                        i.icon
//                            .resizable()
//                            .scaledToFit()
//                            .frame(width: 25, height: 25)
//                            .padding(.leading, 12)
//
//                        Text(i.title)
//                            .font(.system(size: 16))
//                            .bold()
//                            .foregroundColor(Color(.white))
//                            .padding(.top)
//                            .padding(.trailing)
//                            .padding(.bottom)
//                            .padding(.leading, 5)
//                    }.background(cardBadgetFrameColor.opacity(0.87))
//                        .clipShape(Capsule())
//                        .padding(.leading, 10)
//                        .padding(.trailing, 10)
//                }
//            }
//
//        )
//    }
    
    
    var body: some View{
       // TabView {
            ScrollView(.horizontal, showsIndicators: false){
                    HStack(spacing: self.SVWidth){
                        ForEach(self.places, id: \.id){ thisPlace in
                            GeometryReader{geo -> AnyView in
                                return AnyView(
                                    
                                    ZStack{
                                        // -- Image of the current Item from iteration-- //
                                        Image(thisPlace.image)
                                            .resizable()
                                            .scaledToFill()
                                            .frame(width:self.SVWidth, height: self.itemHeight)
                                            .clipped()
                                        
                                        //-- Shadow in the Card on top the Image --//
                                        Rectangle()
                                            .foregroundColor(.black)
                                            .opacity(0.2)
                                        
                                        VStack{
                                            HStack{
                                                
                                                VStack(alignment: .leading){
                                                    Text("\(thisPlace.subtitle)")
                                                        .font(.system(size: 18, weight: .bold, design: .default))
                                                        .foregroundColor(.white).opacity(0.6)
                                                    Text("\(thisPlace.name)").kerning(-0.5)
                                                        .font(.system(size: 36, weight: .bold, design: .default))
                                                }.padding()
                                                Spacer()
                                            }
                                            
                                            Spacer()
                                            
                                            HStack{
                                                
                                                VStack(alignment: .leading){
                                                    ScrollView(.horizontal, showsIndicators: false){
                                                        HStack{
                                                            HStack{
                                                                
                                                                Image("Icon-Wifi")
                                                                    .resizable()
                                                                    .scaledToFit()
                                                                    .frame(width: 25, height: 25)
                                                                    .padding(.leading, 12)
                                                                
                                                                Text("Free Wifi")
                                                                    .font(.system(size: 16))
                                                                    .bold()
                                                                    .foregroundColor(Color(.white))
                                                                    .padding(.top)
                                                                    .padding(.trailing)
                                                                    .padding(.bottom)
                                                                    .padding(.leading, 5)
                                                                
                                                                //                                                            self.BadgetView(place: thisPlace)
                                                            }.background(cardBadgetFrameColor.opacity(0.87))
                                                                .clipShape(Capsule())
                                                                .padding(.leading, 10)
                                                                .padding(.trailing, 10)
                                                            
                                                            HStack{
                                                                
                                                                Image("Icon-Plugs")
                                                                    .resizable()
                                                                    .scaledToFit()
                                                                    .frame(width: 25, height: 25)
                                                                    .padding(.leading, 12)
                                                                
                                                                Text("Free Charging")
                                                                    .font(.system(size: 16))
                                                                    .bold()
                                                                    .foregroundColor(Color(.white))
                                                                    .padding(.top)
                                                                    .padding(.trailing)
                                                                    .padding(.bottom)
                                                                    .padding(.leading, 5)
                                                                
                                                            }.background(cardBadgetFrameColor.opacity(0.87))
                                                                .clipShape(Capsule())
                                                                .padding(.leading, 10)
                                                                .padding(.trailing, 10)
                                                            
                                                            HStack{
                                                                
                                                                Image("Icon-Silent")
                                                                    .resizable()
                                                                    .scaledToFit()
                                                                    .frame(width: 25, height: 25)
                                                                    .padding(.leading, 12)
                                                                
                                                                Text("Quite")
                                                                    .font(.system(size: 16))
                                                                    .bold()
                                                                    .foregroundColor(Color(.white))
                                                                    .padding(.top)
                                                                    .padding(.trailing)
                                                                    .padding(.bottom)
                                                                    .padding(.leading, 5)
                                                                
                                                            }.background(cardBadgetFrameColor.opacity(0.87))
                                                                .clipShape(Capsule())
                                                                .padding(.leading, 10)
                                                                .padding(.trailing, 10)
                                                            
                                                            
                                                        }
                                                    }
                                                    
                                                    
                                                    
//                                                    Text("\(thisPlace.description)")
//                                                        .lineLimit(2)
//                                                        .font(.system(size: 18, weight: .bold, design: .default))
//                                                        .foregroundColor(.init(red: 0.9, green: 0.9, blue: 0.9)).opacity(0.8)
                                                }.padding()
                                                Spacer()
                                            }
                                        }.frame(width: self.SVWidth)
                                            .contextMenu{
                                                VStack{
                                                    Button(action: {
                                                        
                                                        addToFavorites(place: thisPlace)
                                                        
                                                    }){
                                                        HStack{
                                                            Text("Add to Favorites")
                                                            Image(systemName: "heart")
                                                        }
                                                    }
                                                }
                                        }
                                    }.cornerRadius(15.0).foregroundColor(.white)
                                        .shadow(color: .init(red: 0.1, green: 0.1, blue: 0.1) , radius: 10, x: 0, y: 6)
                                ) // <-- return AnyView end //
                            }.background(Color.clear.opacity(0.4)).frame(height: self.itemHeight)
                                .padding(.leading, 20)
                                .padding(.trailing, 20)
                                .padding(.bottom, 20)
                            
                                .onTapGesture {
                                    withAnimation(.spring()){
                                        self.selected = thisPlace
                                        self.show.toggle()
                                    }
                            }
                        }
                        
                        Spacer()
                        
                    }.coordinateSpace(name: "forEach")
            }
        //}.frame(width: UIScreen.main.bounds.width, height: 270)
            
        

    }
}

// --- Detail View of any selected Card/Place --- //
struct Detail : View {
    @Binding var selected : Item
    @Binding var show : Bool
    
    
    // --- Test Purpose only --- //
    
//    var testItem = Item(name: "St Oberholz", type: "Coworking Cafe", description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Etiam tempor orci eu lobortis elementum nibh. Cras sed felis eget velit aliquet sagittis. Nibh sit amet commodo nulla facilisi nullam vehicula ipsum. Pretium fusce id velit ut tortor pretium viverra suspendisse potenti. Mi quis hendrerit dolor magna eget est lorem. Gravida dictum fusce ut placerat orci nulla pellentesque. Mauris sit amet massa vitae tortor condimentum lacinia quis vel. Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque. Eget dolor morbi non arcu risus. Placerat duis ultricies lacus sed turpis tincidunt. Aliquet sagittis id consectetur purus. Orci phasellus egestas tellus rutrum tellus pellentesque eu. Morbi tristique senectus et netus. Elementum facilisis leo vel fringilla est ullamcorper eget. Pellentesque elit eget gravida cum sociis. Ultricies tristique nulla aliquet enim tortor at. Risus viverra adipiscing at in. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Etiam tempor orci eu lobortis elementum nibh. Cras sed felis eget velit aliquet sagittis. Nibh sit amet commodo nulla facilisi nullam vehicula ipsum. Pretium fusce id velit ut tortor pretium viverra suspendisse potenti. Mi quis hendrerit dolor magna eget est lorem. Gravida dictum fusce ut placerat orci nulla pellentesque. Mauris sit amet massa vitae tortor condimentum lacinia quis vel. Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque. Eget dolor morbi non arcu risus. Placerat duis ultricies lacus sed turpis tincidunt. Aliquet sagittis id consectetur purus. Orci phasellus egestas tellus rutrum tellus pellentesque eu. Morbi tristique senectus et netus. Elementum facilisis leo vel fringilla est ullamcorper eget. Pellentesque elit eget gravida cum sociis. Ultricies tristique nulla aliquet enim tortor at. Risus viverra adipiscing at in.", subtitle: "Cafe", image: "CafeOberholz", ratings: "5.0")
//
//    var show:Bool = false
    
    // --- Test Purpose only --- //

        var body: some View{
            
            VStack{
                
                VStack{
                    
                    ZStack(alignment: Alignment(horizontal: .center, vertical: .top)) {
                        
                        Image(selected.image)
                            .resizable()
                            .aspectRatio(contentMode: .fill)
                            .frame(width: UIScreen.main.bounds.width, height: 330)
                            .clipShape(RoundedShape(corners: [.bottomLeft,.bottomRight]))
                        
                        //-- Shadow in the Card on top the Image --//
                        Rectangle()
                            .foregroundColor(.black)
                            .opacity(0.2)
                        HStack{
                            
                            Button(action: {
                                
                                withAnimation(.spring()){self.show.toggle()}
                                
                            }) {
                                
                                Image(systemName: "chevron.left")
                                    .foregroundColor(.black)
                                    .padding()
                                    .background(Color.white)
                                    .clipShape(Circle())
                            }
                            
                            Spacer()
                            
                            Button(action: {}) {
                                
                                Image(systemName: "suit.heart")
                                    .foregroundColor(.black)
                                    .padding()
                                    .background(Color.white)
                                    .clipShape(Circle())
                            }
                        }
                        .frame(width: UIScreen.main.bounds.width)
                        .padding()
                        // since all edges are ignored....
                        .padding(.top,UIApplication.shared.windows.first?.safeAreaInsets.top)
                    }
                    .frame(width: UIScreen.main.bounds.width)

                    
                    // Details View...
                    
                    HStack(alignment: .top){
                        
                        VStack(alignment: .leading, spacing: 12) {
                            
                            Text(selected.name)
                                .font(.title)
                                .foregroundColor(Color(.black))
                                .fontWeight(.bold)
                            
                            HStack(spacing: 10){
                                                 
                                Image(systemName: "markLocation")
                                
                                Text(selected.subtitle)
                                    .fontWeight(.medium)
                                    .multilineTextAlignment(.leading)
                                    .foregroundColor(Color.white)
                                    .frame(width: 70.0, height: 30.0)
                                    .background(accentTextColor)
                                    .clipShape(Capsule())
                                
                                HStack(spacing: 5){
                                    
                                    Text(selected.ratings)
                                        .foregroundColor(.black)
                                    
                                    Image(systemName: "star.fill")
                                        .foregroundColor(.yellow)
                                }
                            }
                        }
                        
                        Spacer(minLength: 0)
                        
                        
                    }
                    .padding()
                }
                .background(Color.white)
                .clipShape(RoundedShape(corners: [.bottomLeft,.bottomRight]))
                // ScrollView For Smaller Size Phones....
                if UIScreen.main.bounds.height < 750{
                    
                    ScrollView(.vertical, showsIndicators: false) {
                        
                        BottomView()
                    }
                }
                else{
                    
                    BottomView()
                }
                
                Spacer(minLength: 0)
            }
            .background(Color(.white))
        }
    }

// --- Bottom View Part of the Detail View --- //
struct BottomView : View {
    
    @State var index = 1
    
    var body: some View{
        VStack(alignment: .leading, spacing: 15) {

            Text("Description")
                .font(.title)
                .fontWeight(.bold)
                .foregroundColor(Color(.black))
                .padding(.top,10)

            Text("The Caribbean is a region of the Americas that consists of the Caribbean Sea, its islands and the surrounding coasts")
                .multilineTextAlignment(.leading)

            Spacer(minLength: 0)

            HStack{

                Spacer(minLength: 0)

                Button(action: {}) {

                    Text("Book Now")
                        .font(.system(size: 20))
                        .fontWeight(.bold)
                        .foregroundColor(.white)
                        .padding(.vertical)
                        .frame(width: UIScreen.main.bounds.width - 100)
                        .background(Color(.black))
                        .clipShape(Capsule())
                }

                Spacer(minLength: 0)
            }
            // since all edges are ignored...


        }.padding()
            .padding(.bottom)
    }
}

// --- Detail View bottom Corners as Shape --- //
struct RoundedShape : Shape {
    
    // for resuable.....
    var corners : UIRectCorner
    
    func path(in rect: CGRect) -> Path {
        
        let path = UIBezierPath(roundedRect: rect, byRoundingCorners: corners, cornerRadii: CGSize(width: 45, height: 45))
        
        return Path(path.cgPath)
    }
}


// --- Preview Section --- //
struct HomeView_Previews: PreviewProvider {
    static var previews: some View {
        HomeView()
    }
}

